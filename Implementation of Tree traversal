// Inorder -left root right
// Pre-order- Root left right
// Postoredr -Left right root



class Node
{
    int key;
    Node right;
    Node left;
    Node(int k)
    {
        key=k;
    }
}
class Main
{
    public static void inoreder(Node root)
    {
        if(root!=null)
        {
            inoreder(root.left);
            System.out.print(root.key+" ");
            inoreder(root.right);
        }
    }

    public static void preorder(Node root)
    {
        if(root!=null)
        {
            System.out.print(root.key+" ");
            preorder(root.left);
            preorder(root.right);
        }
    }

    public static void postorder(Node root)
    {
        if(root!=null)
        {
            postorder(root.left);
            postorder(root.right);
            System.out.print(root.key+" ");
        }
    }


    public static void main(String args[])
    {
        Node root=new Node(20);
        root.left=new Node(30);
        root.right=new Node(40);
        root.left.left=new Node(50);
        root.left.right=new Node(60);
        root.left.left.left=new Node(70);
        root.left.left.right=new Node(80);


        preorder(root);
        System.out.println();
        inoreder(root);
        System.out.println();
        postorder(root);

    }
}
