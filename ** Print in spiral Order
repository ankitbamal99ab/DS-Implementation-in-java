class Node
{
  Node left;
  Node right;
  int data;
  Node(int x)
  {
    data=x;
  }
}

public class Main {
    public  static List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        Stack<TreeNode> s1=new Stack<>();
        Stack<TreeNode> s2=new Stack<>();

        List<List<Integer>>al=new LinkedList<List<Integer>>();
        s1.push(root);
//        List<Integer> temp=new ArrayList<>(); // temp
        while(!s1.isEmpty() || !s2.isEmpty())
        {
            while(!s1.isEmpty())
            {
                TreeNode temp=s1.peek();
                s1.pop();
                System.out.print(" "+temp.val);

                if(temp.right!=null)
                    s2.push(temp.right);

                if(temp.left!=null)
                    s2.push(temp.left);
            }
            System.out.println();
            while(!s2.isEmpty())
            {
                TreeNode temp=s2.peek();
                s2.pop();
                System.out.print(" "+temp.val);

                if(temp.left!=null)
                    s1.push(temp.right);

                if(temp.right!=null)
                    s1.push(temp.left);
            }
        }
        return al;
    }
    public static void main(String args[])
    {
        TreeNode root = new TreeNode(1);
        root.left = new TreeNode(2);
        root.right = new TreeNode(3);
        root.left.left=new TreeNode(7);
        root.left.right=new TreeNode(6);
        root.right.left=new TreeNode(5);
        root.right.right=new TreeNode(4);

        System.out.println(zigzagLevelOrder(root));
    }
}
